// <auto-generated />
using CW2_ProfileService.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CW2_ProfileService.Migrations
{
    [DbContext(typeof(ProfileServiceDbContext))]
    [Migration("20231224095753_initialDb")]
    partial class initialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("CW2")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CW2_ProfileService.Model.Friends", b =>
                {
                    b.Property<int>("friendID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("friendID"));

                    b.Property<string>("friendStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("receiverID")
                        .HasColumnType("int");

                    b.Property<int>("senderID")
                        .HasColumnType("int");

                    b.HasKey("friendID");

                    b.ToTable("Friends", "CW2");
                });

            modelBuilder.Entity("CW2_ProfileService.Model.FriendsKey", b =>
                {
                    b.Property<int>("friendsKeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("friendsKeyID"));

                    b.Property<int>("friendID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("friendsKeyID");

                    b.ToTable("FriendsKey", "CW2");
                });

            modelBuilder.Entity("CW2_ProfileService.Model.HikingGroups", b =>
                {
                    b.Property<int>("groupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("groupID"));

                    b.Property<int>("creatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("groupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("groupID");

                    b.ToTable("HikingGroups", "CW2");
                });

            modelBuilder.Entity("CW2_ProfileService.Model.HikingHistory", b =>
                {
                    b.Property<int>("historyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("historyID"));

                    b.Property<float>("distance")
                        .HasColumnType("real");

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("elevation")
                        .HasColumnType("real");

                    b.Property<string>("hikeDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("trailID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("historyID");

                    b.ToTable("HikingHistory", "CW2");
                });

            modelBuilder.Entity("CW2_ProfileService.Model.JoinedHikingGroups", b =>
                {
                    b.Property<int>("joinedGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("joinedGroupID"));

                    b.Property<int>("groupID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("joinedGroupID");

                    b.ToTable("JoinedHikingGroups", "CW2");
                });

            modelBuilder.Entity("CW2_ProfileService.Model.Trails", b =>
                {
                    b.Property<int>("TrailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrailID"));

                    b.Property<string>("TrailName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrailID");

                    b.ToTable("Trails", "CW2");
                });

            modelBuilder.Entity("CW2_ProfileService.Model.UserProfile", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JoinDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("UserProfile", "CW2");
                });
#pragma warning restore 612, 618
        }
    }
}
